<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://OOlinOO.github.io</id>
    <title>Gridea</title>
    <updated>2020-02-13T11:50:07.892Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://OOlinOO.github.io"/>
    <link rel="self" href="https://OOlinOO.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://OOlinOO.github.io/images/avatar.png</logo>
    <icon>https://OOlinOO.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[使用LR2020连接Quantum数据库]]></title>
        <id>https://OOlinOO.github.io/post/shi-yong-lr2020-lian-jie-quantum-shu-ju-ku</id>
        <link href="https://OOlinOO.github.io/post/shi-yong-lr2020-lian-jie-quantum-shu-ju-ku">
        </link>
        <updated>2020-02-13T10:15:23.000Z</updated>
        <content type="html"><![CDATA[<h1 id="使用lr2020连接quantum数据库">使用LR2020连接Quantum数据库</h1>
<h1 id="1-新建脚本">1 新建脚本</h1>
<h2 id="选择划红线的选项">选择划红线的选项<br>
<img src="https://OOlinOO.github.io/post-images/1581594498247.PNG" alt=""></h2>
<h1 id="2-运行时设置">2 运行时设置</h1>
<h2 id="21-配置jdk">2.1 配置JDK</h2>
<p>这里配置脚本运行时的环境，我的运行环境是JDK1.8。<br>
软件默认从系统环境变量找JDK，如果找不到请自行设置<br>
<img src="https://OOlinOO.github.io/post-images/1581594510540.PNG" alt=""></p>
<h2 id="22-配置连接驱动">2.2 配置连接驱动</h2>
<p>将驱动加入Classpath条目下<br>
<img src="https://OOlinOO.github.io/post-images/1581594522098.PNG" alt=""></p>
<h2 id="23-保存设置">2.3 保存设置</h2>
<hr>
<h1 id="3-脚本编辑">3 脚本编辑</h1>
<h2 id="31-编辑actions文件">3.1 编辑Actions文件</h2>
<p>/*</p>
<ul>
<li>LoadRunner Java script. (Build: <em>build_number</em>)</li>
<li></li>
<li>Script Description:</li>
<li></li>
</ul>
<p>*/</p>
<p>import lrapi.lr;<br>
import java.sql.Connection;<br>
import java.sql.DriverManager;<br>
import java.sql.PreparedStatement;<br>
import java.sql.ResultSet;<br>
import java.sql.SQLException;<br>
public class Actions<br>
{</p>
<pre><code>public int init() throws Throwable {

	return 0;
}//end of init


public int action() throws Throwable {
	//DBManager.getConnection();
	DBManager.insert(40000);//
	return 0;
}//end of action


public int end() throws Throwable {
	return 0;
}//end of end
</code></pre>
<p>}<br>
class DBManager{<br>
private static final String DRIVER = &quot;com.mysql.cj.jdbc.Driver&quot;;<br>
private static final String URL = &quot;jdbc:mysql://192.168.43.222:3306/test?serverTimezone=UTC&amp;useSSL=false&quot;;<br>
private static final String USER = &quot;u1&quot;;<br>
private static final String passwd = &quot;123456&quot;;<br>
private DBManager() {<br>
}<br>
public static Connection getConnection() {<br>
Connection con = null;<br>
try {<br>
Class.forName(DRIVER).newInstance();<br>
con = DriverManager.getConnection(URL, USER, passwd);<br>
System.out.println(&quot;连接成功&quot;);<br>
} catch (Exception e) {<br>
throw new RuntimeException(&quot;无法连接数据库&quot;);<br>
}<br>
return con;</p>
<pre><code>}
//数据插入操作
public static void insert(int dataSize) {
	Connection connection = null;
	PreparedStatement preparedStatement = null;
	connection = DBManager.getConnection();
	String sql = &quot;insert into people(id,username,password) values(?,?,?)&quot;;
	try {
		preparedStatement = connection.prepareStatement(sql);
		connection.setAutoCommit(false);//关闭自动提交
		for(int i=1;i&lt;dataSize;i++){
			preparedStatement.setInt(1,i);
			preparedStatement.setString(2, &quot;user&quot;+i);
			preparedStatement.setString(3, &quot;pwd&quot;+i);
			preparedStatement.addBatch();//增加批处理
        //设置批处理数据缓冲大小
        	if(i%20000==0){
            	preparedStatement.executeBatch();//
        	}
		}
		connection.commit();
	} catch (SQLException e) {
		e.printStackTrace();
	} 
	/*关闭与数据库的连接运行会报错，但不会影响数据的插入操作，不过这里还是选择不关闭连接
	try {
		connection.close();
		preparedStatement.close();
	} catch (SQLException e) {
		e.printStackTrace();
	}*/
}
</code></pre>
<p>}</p>
<h2 id="32-数据库相关">3.2 数据库相关</h2>
<p>建库建表<br>
CREATE DATABASE test;<br>
use test;<br>
CREATE TABLE people (<br>
id int(11) DEFAULT NULL,<br>
username varchar(20) DEFAULT NULL,<br>
password varchar(20) DEFAULT NULL<br>
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;</p>
<p>备注：</p>
<ol>
<li>创建一个远程用户u1，密码为123456，并赋予相关权限</li>
<li>记得关闭Linux下的防火墙</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://OOlinOO.github.io/post/hello-gridea</id>
        <link href="https://OOlinOO.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>